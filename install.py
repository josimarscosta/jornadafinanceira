#!/usr/bin/env python3
"""
Script de instala√ß√£o autom√°tica para Jornada Interativa - Fundamentos Financeiros
"""

import subprocess
import sys
import os

def run_command(command, description):
    """Executa um comando e exibe o progresso"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} conclu√≠do!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro em {description}: {e}")
        print(f"Sa√≠da do erro: {e.stderr}")
        return False

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    version = sys.version_info
    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("‚ùå Python 3.8 ou superior √© necess√°rio!")
        print(f"Vers√£o atual: {version.major}.{version.minor}.{version.micro}")
        return False
    print(f"‚úÖ Python {version.major}.{version.minor}.{version.micro} detectado")
    return True

def main():
    """Fun√ß√£o principal de instala√ß√£o"""
    print("üöÄ Instalador da Jornada Interativa - Fundamentos Financeiros")
    print("=" * 60)
    
    # Verificar vers√£o do Python
    if not check_python_version():
        return False
    
    # Verificar se pip est√° dispon√≠vel
    if not run_command("pip --version", "Verificando pip"):
        print("üí° Tentando instalar pip...")
        if not run_command("python -m ensurepip --upgrade", "Instalando pip"):
            return False
    
    # Atualizar pip
    run_command("pip install --upgrade pip", "Atualizando pip")
    
    # Instalar depend√™ncias
    if not run_command("pip install -r requirements.txt", "Instalando depend√™ncias"):
        return False
    
    print("\nüéâ Instala√ß√£o conclu√≠da com sucesso!")
    print("\nüìã Para executar o aplicativo:")
    print("   streamlit run app.py")
    print("\nüåê O aplicativo ser√° aberto automaticamente no navegador")
    print("   URL: http://localhost:8501")
    
    # Perguntar se deseja executar agora
    try:
        resposta = input("\n‚ùì Deseja executar o aplicativo agora? (s/n): ").lower().strip()
        if resposta in ['s', 'sim', 'y', 'yes']:
            print("\nüöÄ Iniciando aplicativo...")
            os.system("streamlit run app.py")
    except KeyboardInterrupt:
        print("\nüëã Instala√ß√£o finalizada. Execute 'streamlit run app.py' quando quiser usar o aplicativo.")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå Instala√ß√£o falhou. Verifique os erros acima e tente novamente.")
        sys.exit(1)

