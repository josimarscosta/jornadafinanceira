import streamlit as st
import json
import time
from typing import Dict, Any
import plotly.graph_objects as go
import plotly.express as px
from datetime import datetime

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Jornada Interativa - Fundamentos Financeiros",
    page_icon="üß†",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS customizado para melhorar a apar√™ncia
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Poppins:wght@300;400;500;600;700;800&display=swap');
    
    .main-header {
        font-family: 'Poppins', sans-serif;
        font-size: 3rem;
        font-weight: 700;
        color: #F59E0B;
        text-align: center;
        margin-bottom: 2rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }
    
    .module-card {
        background: linear-gradient(135deg, #065F46 0%, #047857 100%);
        border: 2px solid #F59E0B;
        border-radius: 1rem;
        padding: 1.5rem;
        margin: 1rem 0;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .module-title {
        font-family: 'Poppins', sans-serif;
        font-size: 1.5rem;
        font-weight: 600;
        color: #F59E0B;
        margin-bottom: 0.5rem;
    }
    
    .module-description {
        font-family: 'Inter', sans-serif;
        font-size: 1rem;
        line-height: 1.6;
        color: #D1D5DB;
        margin-bottom: 1rem;
    }
    
    .level-badge {
        background-color: rgba(245, 158, 11, 0.2);
        color: #FCD34D;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .stats-container {
        background: rgba(0, 0, 0, 0.3);
        border: 2px solid rgba(245, 158, 11, 0.3);
        border-radius: 1rem;
        padding: 2rem;
        margin: 2rem 0;
        text-align: center;
    }
    
    .stat-item {
        display: inline-block;
        margin: 0 2rem;
        text-align: center;
    }
    
    .stat-value {
        font-family: 'Poppins', sans-serif;
        font-size: 2rem;
        font-weight: 700;
        color: #F59E0B;
    }
    
    .stat-label {
        font-family: 'Inter', sans-serif;
        font-size: 0.875rem;
        color: #D1D5DB;
        margin-top: 0.5rem;
    }
    
    .welcome-section {
        background: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.7)), 
                    url('https://images.unsplash.com/photo-1553729459-efe14ef6055d?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');
        background-size: cover;
        background-position: center;
        border-radius: 1rem;
        padding: 3rem;
        margin: 2rem 0;
        text-align: center;
        color: white;
    }
    
    .welcome-title {
        font-family: 'Poppins', sans-serif;
        font-size: 2.5rem;
        font-weight: 700;
        color: #F59E0B;
        margin-bottom: 1.5rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
    }
    
    .welcome-text {
        font-family: 'Inter', sans-serif;
        font-size: 1.125rem;
        line-height: 1.6;
        margin-bottom: 2rem;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
    }
    
    .neuro-insight {
        background: rgba(245, 158, 11, 0.1);
        border-left: 4px solid #F59E0B;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 1.5rem 0;
    }
    
    .neuro-title {
        font-family: 'Poppins', sans-serif;
        font-size: 1.25rem;
        font-weight: 600;
        color: #F59E0B;
        margin-bottom: 0.75rem;
    }
    
    .exercise-container {
        background: rgba(17, 24, 39, 0.5);
        border: 1px solid rgba(245, 158, 11, 0.2);
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin: 2rem 0;
    }
</style>
""", unsafe_allow_html=True)

# Dados dos m√≥dulos
MODULES_DATA = [
    {
        "id": 1,
        "title": "Linguagem Financeira",
        "icon": "üìö",
        "level": "FUNDAMENTAL",
        "description": "Domine o vocabul√°rio essencial dos neg√≥cios e desenvolva flu√™ncia na interpreta√ß√£o de demonstra√ß√µes financeiras.",
        "content": {
            "title": "M√≥dulo 1: Linguagem Financeira Fundamental",
            "neuro_insight": "Este m√≥dulo ativa simultaneamente as √°reas de Broca (processamento lingu√≠stico), c√≥rtex pr√©-frontal (an√°lise l√≥gica) e hipocampo (forma√ß√£o de mem√≥rias), criando uma rede neural robusta para compreens√£o financeira.",
            "introduction": "Assim como um fazendeiro possui terras, equipamentos e colheitas, uma empresa possui recursos que geram valor futuro. Este m√≥dulo ensina o idioma b√°sico das finan√ßas.",
            "details": [
                "Ativos: Recursos de Valor. S√£o todos os bens e direitos controlados pela empresa.",
                "Passivos: Obriga√ß√µes Assumidas. Representam as d√≠vidas e compromissos da empresa.",
                "Patrim√¥nio L√≠quido: O capital pr√≥prio da empresa, a diferen√ßa entre Ativos e Passivos."
            ],
            "exercise": {
                "type": "classification",
                "title": "Exerc√≠cio de Fixa√ß√£o Neural",
                "introduction": "Classifique os itens abaixo como Ativo ou Passivo para fortalecer suas conex√µes neurais.",
                "items": [
                    {"text": "üíª Computadores da empresa", "answer": "ativo"},
                    {"text": "üè¶ Empr√©stimo banc√°rio", "answer": "passivo"},
                    {"text": "üí∞ Dinheiro em conta corrente", "answer": "ativo"},
                    {"text": "üßæ Contas a pagar para fornecedores", "answer": "passivo"}
                ]
            }
        }
    },
    {
        "id": 2,
        "title": "An√°lise Patrimonial",
        "icon": "‚öñÔ∏è",
        "level": "INTERMEDI√ÅRIO",
        "description": "Desvende a estrutura patrimonial das empresas e aprenda t√©cnicas de an√°lise vertical e horizontal.",
        "content": {
            "title": "M√≥dulo 2: An√°lise Patrimonial Estrat√©gica",
            "neuro_insight": "Este m√≥dulo estimula o c√≥rtex parietal (processamento espacial) e o c√≥rtex pr√©-frontal dorsolateral (an√°lise comparativa), desenvolvendo a capacidade de 'visualizar' estruturas patrimoniais complexas.",
            "introduction": "Vamos aprofundar nossa an√°lise, aprendendo a interpretar a 'fotografia' financeira de uma empresa e a simular cen√°rios para entender seu impacto.",
            "details": [
                "An√°lise Vertical e Horizontal: Ferramentas para entender a composi√ß√£o e a evolu√ß√£o do patrim√¥nio.",
                "Indicadores de Liquidez: Medem a capacidade da empresa de pagar suas contas de curto prazo.",
                "Capital de Giro: O 'f√¥lego' financeiro para as opera√ß√µes do dia a dia."
            ]
        }
    },
    {
        "id": 3,
        "title": "Performance & Rentabilidade",
        "icon": "üìà",
        "level": "AVAN√áADO",
        "description": "Analise a capacidade de gera√ß√£o de valor e desenvolva compet√™ncias em modelagem de cen√°rios.",
        "content": {
            "title": "M√≥dulo 3: Performance e Rentabilidade",
            "neuro_insight": "Este m√≥dulo estimula o n√∫cleo accumbens (centro de recompensa) e o c√≥rtex orbitofrontal (tomada de decis√£o), criando associa√ß√µes positivas com an√°lise de performance financeira.",
            "introduction": "Agora vamos medir o sucesso. Os indicadores de rentabilidade mostram o qu√£o eficientemente uma empresa transforma seus recursos em lucro.",
            "details": [
                "Margem de Lucro: O percentual de cada venda que se transforma em lucro.",
                "ROE (Retorno sobre Patrim√¥nio): Mede o retorno que os s√≥cios obt√™m sobre seu capital investido."
            ]
        }
    },
    {
        "id": 4,
        "title": "S√≠ntese e Aplica√ß√£o",
        "icon": "üéØ",
        "level": "ESTRAT√âGICO",
        "description": "Aplique todo o conhecimento em um desafio final, consolidando sua expertise financeira.",
        "content": {
            "title": "M√≥dulo 4: S√≠ntese e Aplica√ß√£o Estrat√©gica",
            "neuro_insight": "Este m√≥dulo integra todas as √°reas cerebrais trabalhadas anteriormente, criando uma rede neural consolidada para tomada de decis√µes financeiras estrat√©gicas.",
            "introduction": "Chegou o momento de aplicar todo o conhecimento adquirido. Este m√≥dulo final consolida sua jornada de aprendizado.",
            "details": [
                "Integra√ß√£o de Conceitos: Conecte todos os conhecimentos adquiridos.",
                "An√°lise Estrat√©gica: Desenvolva vis√£o sist√™mica dos neg√≥cios.",
                "Tomada de Decis√£o: Aplique os conceitos em situa√ß√µes reais."
            ]
        }
    }
]

# Inicializa√ß√£o do estado da sess√£o
if 'journey_started' not in st.session_state:
    st.session_state.journey_started = False
if 'completed_modules' not in st.session_state:
    st.session_state.completed_modules = set()
if 'stats' not in st.session_state:
    st.session_state.stats = {
        'sinapses': 0,
        'insights': 0,
        'aplicacoes': 0
    }
if 'current_module' not in st.session_state:
    st.session_state.current_module = None

def show_welcome_section():
    """Exibe a se√ß√£o de boas-vindas"""
    st.markdown("""
    <div class="welcome-section">
        <h2 class="welcome-title">üåæ O Despertar da Intelig√™ncia Financeira</h2>
        <div class="welcome-text">
            <p>Assim como o Espantalho descobriu que sempre possuiu a intelig√™ncia que buscava, voc√™ est√° prestes a despertar compet√™ncias financeiras que transformar√£o sua vis√£o sobre o mundo dos neg√≥cios.</p>
        </div>
        <div class="neuro-insight">
            <h4 class="neuro-title">üß† Neuroci√™ncia Aplicada</h4>
            <p>Cada elemento desta jornada ativa m√∫ltiplas √°reas cerebrais, criando conex√µes neurais robustas para facilitar a compreens√£o e aplica√ß√£o pr√°tica dos conceitos.</p>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        if st.button("üöÄ INICIAR JORNADA", type="primary", use_container_width=True):
            st.session_state.journey_started = True
            st.rerun()

def show_module_card(module):
    """Exibe um card de m√≥dulo"""
    completed = module["id"] in st.session_state.completed_modules
    completion_icon = "‚úÖ" if completed else ""
    
    st.markdown(f"""
    <div class="module-card">
        <div style="display: flex; justify-content: space-between; align-items: flex-start;">
            <div style="flex: 1;">
                <div style="display: flex; align-items: center; margin-bottom: 1rem;">
                    <span style="font-size: 2rem; margin-right: 1rem;">{module["icon"]}</span>
                    <h3 class="module-title">{module["title"]}</h3>
                    {f'<span style="font-size: 1.5rem; margin-left: 1rem;">{completion_icon}</span>' if completed else ''}
                </div>
                <p class="module-description">{module["description"]}</p>
                <span class="level-badge">{module["level"]}</span>
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    if st.button(f"Abrir {module['title']}", key=f"open_{module['id']}", use_container_width=True):
        st.session_state.current_module = module["id"]
        st.rerun()

def show_stats():
    """Exibe as estat√≠sticas de gamifica√ß√£o"""
    st.markdown("""
    <div class="stats-container">
        <h3 style="color: #F59E0B; font-family: 'Poppins', sans-serif; margin-bottom: 2rem;">üèÜ Conquistas Neurocient√≠ficas</h3>
        <div style="display: flex; justify-content: space-around; flex-wrap: wrap;">
            <div class="stat-item">
                <div style="font-size: 3rem;">üß†</div>
                <div class="stat-value">{}</div>
                <div class="stat-label">Sinapses Ativas</div>
            </div>
            <div class="stat-item">
                <div style="font-size: 3rem;">‚ö°</div>
                <div class="stat-value">{}</div>
                <div class="stat-label">Insights Gerados</div>
            </div>
            <div class="stat-item">
                <div style="font-size: 3rem;">üéØ</div>
                <div class="stat-value">{}</div>
                <div class="stat-label">Aplica√ß√µes Pr√°ticas</div>
            </div>
        </div>
    </div>
    """.format(
        st.session_state.stats['sinapses'],
        st.session_state.stats['insights'],
        st.session_state.stats['aplicacoes']
    ), unsafe_allow_html=True)

def show_module_content(module_id):
    """Exibe o conte√∫do detalhado de um m√≥dulo"""
    module = next((m for m in MODULES_DATA if m["id"] == module_id), None)
    if not module:
        return
    
    content = module["content"]
    
    # Cabe√ßalho do m√≥dulo
    col1, col2 = st.columns([1, 10])
    with col1:
        if st.button("‚Üê Voltar"):
            st.session_state.current_module = None
            st.rerun()
    
    with col2:
        st.markdown(f"""
        <h1 style="color: #F59E0B; font-family: 'Poppins', sans-serif;">
            {module["icon"]} {content["title"]}
        </h1>
        """, unsafe_allow_html=True)
    
    # Insight neurocient√≠fico
    st.markdown(f"""
    <div class="neuro-insight">
        <h4 class="neuro-title">üß† Insight Neurocient√≠fico</h4>
        <p>{content["neuro_insight"]}</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Introdu√ß√£o
    st.markdown(f"**Introdu√ß√£o:** {content['introduction']}")
    
    # Detalhes
    st.markdown("**Conceitos Fundamentais:**")
    for detail in content["details"]:
        st.markdown(f"‚Ä¢ {detail}")
    
    # Exerc√≠cio (se dispon√≠vel)
    if "exercise" in content and content["exercise"]["type"] == "classification":
        show_classification_exercise(content["exercise"], module_id)
    
    # Simulador de liquidez para m√≥dulo 2
    if module_id == 2:
        show_liquidity_simulator()
    
    # Simulador de rentabilidade para m√≥dulo 3
    if module_id == 3:
        show_profitability_simulator()
    
    # Bot√£o de conclus√£o
    completed = module_id in st.session_state.completed_modules
    if not completed:
        if st.button(f"‚úÖ Marcar {module['title']} como Conclu√≠do", type="primary"):
            st.session_state.completed_modules.add(module_id)
            st.session_state.stats['sinapses'] += 1
            st.success(f"Parab√©ns! Voc√™ concluiu o {module['title']}!")
            time.sleep(1)
            st.rerun()
    else:
        st.success(f"‚úÖ {module['title']} conclu√≠do!")

def show_classification_exercise(exercise, module_id):
    """Exibe exerc√≠cio de classifica√ß√£o"""
    st.markdown(f"""
    <div class="exercise-container">
        <h4 style="color: #F59E0B; font-family: 'Poppins', sans-serif;">{exercise["title"]}</h4>
        <p>{exercise["introduction"]}</p>
    </div>
    """, unsafe_allow_html=True)
    
    for i, item in enumerate(exercise["items"]):
        st.markdown(f"**{item['text']}**")
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("Ativo", key=f"ativo_{module_id}_{i}"):
                if item["answer"] == "ativo":
                    st.success("‚úÖ Correto!")
                    st.session_state.stats['insights'] += 1
                else:
                    st.error("‚ùå Incorreto. Tente novamente!")
        
        with col2:
            if st.button("Passivo", key=f"passivo_{module_id}_{i}"):
                if item["answer"] == "passivo":
                    st.success("‚úÖ Correto!")
                    st.session_state.stats['insights'] += 1
                else:
                    st.error("‚ùå Incorreto. Tente novamente!")

def show_liquidity_simulator():
    """Exibe simulador de liquidez para o m√≥dulo 2"""
    st.markdown("""
    <div class="exercise-container">
        <h4 style="color: #F59E0B; font-family: 'Poppins', sans-serif;">üß™ Laborat√≥rio de An√°lise de Liquidez</h4>
        <p>Experimente diferentes cen√°rios e observe como mudan√ßas patrimoniais afetam os indicadores.</p>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        ativo_circulante = st.slider("Ativo Circulante (R$ mil)", 100, 1000, 500)
        passivo_circulante = st.slider("Passivo Circulante (R$ mil)", 50, 800, 300)
    
    with col2:
        # C√°lculos
        liquidez_corrente = ativo_circulante / passivo_circulante if passivo_circulante > 0 else 0
        capital_giro = ativo_circulante - passivo_circulante
        
        # Interpreta√ß√£o da liquidez
        if liquidez_corrente >= 1.5:
            status = "‚úÖ Situa√ß√£o financeira saud√°vel"
            color = "green"
        elif liquidez_corrente >= 1.0:
            status = "‚ö†Ô∏è Situa√ß√£o financeira de aten√ß√£o"
            color = "orange"
        else:
            status = "‚ùå Situa√ß√£o financeira preocupante"
            color = "red"
        
        st.metric("Liquidez Corrente", f"{liquidez_corrente:.2f}")
        st.metric("Capital de Giro", f"R$ {capital_giro:,.0f} mil")
        st.markdown(f"<p style='color: {color}; font-weight: bold;'>{status}</p>", unsafe_allow_html=True)
        
        # Gr√°fico
        fig = go.Figure(data=[
            go.Bar(name='Ativo Circulante', x=['Recursos'], y=[ativo_circulante], marker_color='green'),
            go.Bar(name='Passivo Circulante', x=['Obriga√ß√µes'], y=[passivo_circulante], marker_color='red')
        ])
        fig.update_layout(title="Compara√ß√£o Ativo vs Passivo Circulante", yaxis_title="Valor (R$ mil)")
        st.plotly_chart(fig, use_container_width=True)

def show_profitability_simulator():
    """Exibe simulador de rentabilidade para o m√≥dulo 3"""
    st.markdown("""
    <div class="exercise-container">
        <h4 style="color: #F59E0B; font-family: 'Poppins', sans-serif;">üéÆ Simulador de Estrat√©gias de Rentabilidade</h4>
        <p>Ajuste os par√¢metros e observe como diferentes estrat√©gias afetam a rentabilidade.</p>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        estrategia = st.selectbox("Estrat√©gia de Pre√ßos", [
            "Competitivo (padr√£o)",
            "Premium (+20% pre√ßo, -10% volume)",
            "Penetra√ß√£o (-15% pre√ßo, +25% volume)"
        ])
        
        eficiencia = st.slider("Efici√™ncia Operacional (%)", 80, 120, 100)
    
    with col2:
        # C√°lculos baseados na estrat√©gia
        receita_base = 1000000
        custo_base = 700000
        
        if "Premium" in estrategia:
            mult_receita = 1.2 * 0.9  # +20% pre√ßo, -10% volume
        elif "Penetra√ß√£o" in estrategia:
            mult_receita = 0.85 * 1.25  # -15% pre√ßo, +25% volume
        else:
            mult_receita = 1.0
        
        receita = receita_base * mult_receita
        custo = custo_base * (eficiencia / 100)
        lucro = receita - custo
        margem = (lucro / receita) * 100 if receita > 0 else 0
        
        st.metric("Receita", f"R$ {receita:,.0f}")
        st.metric("Lucro", f"R$ {lucro:,.0f}")
        st.metric("Margem de Lucro", f"{margem:.1f}%")
        
        # Gr√°fico de pizza
        fig = go.Figure(data=[go.Pie(
            labels=['Lucro', 'Custos'],
            values=[lucro, custo],
            hole=.3,
            marker_colors=['green', 'red']
        )])
        fig.update_layout(title="Composi√ß√£o da Receita")
        st.plotly_chart(fig, use_container_width=True)

def main():
    """Fun√ß√£o principal do aplicativo"""
    # Cabe√ßalho
    st.markdown('<h1 class="main-header">üß† Fundamentos Financeiros</h1>', unsafe_allow_html=True)
    st.markdown('<p style="text-align: center; color: #D1D5DB; font-family: Inter, sans-serif; font-size: 1.125rem;">Jornada do Espantalho</p>', unsafe_allow_html=True)
    
    # Barra de progresso
    progress = len(st.session_state.completed_modules) / len(MODULES_DATA) * 100
    st.progress(progress / 100)
    st.markdown(f'<p style="text-align: center; color: #F59E0B; font-weight: bold;">{progress:.0f}% Conclu√≠do</p>', unsafe_allow_html=True)
    
    # Conte√∫do principal
    if not st.session_state.journey_started:
        show_welcome_section()
    elif st.session_state.current_module:
        show_module_content(st.session_state.current_module)
    else:
        # Mapa de compet√™ncias
        st.markdown('<h2 style="text-align: center; color: #F59E0B; font-family: Poppins, sans-serif; margin: 2rem 0;">üó∫Ô∏è Mapa de Compet√™ncias Financeiras</h2>', unsafe_allow_html=True)
        
        # M√≥dulos em grid
        for i in range(0, len(MODULES_DATA), 2):
            col1, col2 = st.columns(2)
            with col1:
                show_module_card(MODULES_DATA[i])
            if i + 1 < len(MODULES_DATA):
                with col2:
                    show_module_card(MODULES_DATA[i + 1])
        
        # Estat√≠sticas
        show_stats()
        
        # Verificar se todos os m√≥dulos foram conclu√≠dos
        if len(st.session_state.completed_modules) == len(MODULES_DATA):
            st.balloons()
            st.markdown("""
            <div style="background: linear-gradient(135deg, #F59E0B, #D97706); padding: 2rem; border-radius: 1rem; text-align: center; margin: 2rem 0;">
                <h2 style="color: white; font-family: 'Poppins', sans-serif;">üéâ Parab√©ns!</h2>
                <p style="color: white; font-size: 1.25rem;">Voc√™ concluiu sua jornada de fundamentos financeiros!</p>
                <p style="color: white;">Sua mente agora possui as conex√µes neurais necess√°rias para compreender e aplicar conceitos financeiros fundamentais.</p>
            </div>
            """, unsafe_allow_html=True)

    # Sidebar com informa√ß√µes
    with st.sidebar:
        st.markdown("### üìä Progresso da Jornada")
        st.metric("M√≥dulos Conclu√≠dos", f"{len(st.session_state.completed_modules)}/{len(MODULES_DATA)}")
        st.metric("Sinapses Ativas", st.session_state.stats['sinapses'])
        st.metric("Insights Gerados", st.session_state.stats['insights'])
        st.metric("Aplica√ß√µes Pr√°ticas", st.session_state.stats['aplicacoes'])
        
        st.markdown("---")
        st.markdown("### üß† Sobre a Jornada")
        st.markdown("""
        Esta jornada utiliza princ√≠pios de neuroci√™ncia para otimizar o aprendizado de conceitos financeiros fundamentais.
        
        Cada m√≥dulo foi projetado para ativar diferentes √°reas cerebrais, criando uma rede neural robusta para compreens√£o financeira.
        """)
        
        if st.button("üîÑ Reiniciar Jornada"):
            st.session_state.journey_started = False
            st.session_state.completed_modules = set()
            st.session_state.stats = {'sinapses': 0, 'insights': 0, 'aplicacoes': 0}
            st.session_state.current_module = None
            st.rerun()

if __name__ == "__main__":
    main()

